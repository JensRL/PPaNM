--------------------- Testing the QRGS Decomposition ----------------
Random generated matrix A:

     0.943      0.137      0.258     0.0359      0.954 
     0.247      0.829      0.436      0.124      0.842 
     0.457      0.902     0.0422      0.011      0.935 
      0.14      0.781      0.321      0.589      0.892 
     0.824      0.321      0.733      0.424     0.0513 
     0.853      0.918      0.329      0.357      0.754 
     0.196      0.642      0.428     0.0798      0.781 
     0.496      0.431      0.935      0.909      0.194 
QRGS Decomposed Q Matrix:

     0.557     -0.433     -0.236      -0.11      0.651 
     0.146      0.459      0.144      -0.46     0.0557 
      0.27      0.393     -0.436    -0.0322     -0.138 
    0.0828      0.484     0.0811      0.545      0.419 
     0.486     -0.233      0.319     -0.162     -0.429 
     0.503      0.181      -0.32      0.265     -0.383 
     0.116      0.353      0.213     -0.521      0.216 
     0.293     0.0312      0.691      0.332     0.0282 
QRGS Decomposed R Matrix, which is hopefully right triangular:

      1.69       1.32       1.09      0.752       1.53 
         0       1.39      0.329      0.353       1.18 
         0          0      0.875      0.719     -0.364 
         0          0          0      0.546     -0.188 
         0          0          0          0      0.777 
Checking that Q^T*Q = 1:

         1  -1.44e-16  -1.11e-16   1.25e-16   1.73e-16 
 -1.44e-16          1  -7.98e-17   4.68e-17   1.14e-16 
 -1.11e-16  -7.98e-17          1   5.83e-16    5.2e-17 
  1.25e-16   4.68e-17   5.83e-16          1    5.9e-17 
  1.73e-16   1.14e-16    5.2e-17    5.9e-17          1 
Only tiny values on off-diagonal - it's good enough!
Check that Q*R=A:

     0.943      0.137      0.258     0.0359      0.954 
     0.247      0.829      0.436      0.124      0.842 
     0.457      0.902     0.0422      0.011      0.935 
      0.14      0.781      0.321      0.589      0.892 
     0.824      0.321      0.733      0.424     0.0513 
     0.853      0.918      0.329      0.357      0.754 
     0.196      0.642      0.428     0.0798      0.781 
     0.496      0.431      0.935      0.909      0.194 
Yep that looks like A!
--------------------- Testing the implemented solver----------------
Random generated matrix A2:

     0.878      0.897      0.615      0.133       0.48      0.798 
     0.742      0.534      0.552      0.864      0.354      0.056 
     0.622      0.404      0.834      0.985      0.101      0.329 
    0.0785       0.37      0.646      0.815      0.474      0.962 
     0.439      0.709      0.845      0.412      0.395      0.317 
     0.424      0.117      0.291      0.571     0.0544      0.452 
Random generated vector b:
     0.575      0.466      0.286        0.5       0.23      0.945 
QRGS Decomp of A and R:

     0.608      0.232     -0.582     -0.144      0.267      0.382 
     0.514     -0.207    -0.0898      0.632     -0.463     -0.266 
     0.431     -0.251      0.603     -0.357     -0.266      0.436 
    0.0544      0.542      0.464      0.554       0.33       0.27 
     0.304      0.584      0.184     -0.381      -0.13     -0.609 
     0.293     -0.454      0.201     0.0067       0.72     -0.386 

      1.44       1.26       1.39       1.29      0.679      0.937 
         0      0.557       0.53     0.0276      0.476      0.591 
         0          0       0.61       1.01     0.0537      0.325 
         0          0          0      0.475      0.231      0.218 
         0          0          0          0     0.0817      0.702 
         0          0          0          0          0      0.326 
Solving the system for solution (y):
      7.34      -17.4       8.01      -5.09       12.2     -0.457 
Checking that the solution satisfies A*y=b:
A*y is equal to:
     0.575      0.466      0.286        0.5       0.23      0.945 
Which is equal to b: 
     0.575      0.466      0.286        0.5       0.23      0.945 
The system has been solved!
Is A*y approximately equal to b using method from vector class? - True
